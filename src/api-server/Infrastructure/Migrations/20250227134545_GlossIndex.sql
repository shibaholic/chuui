CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE TABLE "Entries" (
        ent_seq text NOT NULL,
        "SelectedKanjiIndex" integer,
        "SelectedReadingIndex" integer NOT NULL,
        "PriorityScore" integer,
        CONSTRAINT "PK_Entries" PRIMARY KEY (ent_seq)
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE TABLE "Users" (
        "Id" uuid NOT NULL,
        "Username" text NOT NULL,
        "Password" text NOT NULL,
        "Email" text,
        "RefreshToken" uuid,
        "IsAdmin" boolean NOT NULL,
        CONSTRAINT "PK_Users" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE TABLE "KanjiElements" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        ent_seq text NOT NULL,
        keb text NOT NULL,
        ke_inf text[] NOT NULL,
        ke_pri text,
        CONSTRAINT "PK_KanjiElements" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_KanjiElements_Entries_ent_seq" FOREIGN KEY (ent_seq) REFERENCES "Entries" (ent_seq) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE TABLE "ReadingElements" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        ent_seq text NOT NULL,
        reb text NOT NULL,
        re_nokanji boolean NOT NULL,
        re_restr text[] NOT NULL,
        re_inf text[] NOT NULL,
        re_pri text,
        CONSTRAINT "PK_ReadingElements" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_ReadingElements_Entries_ent_seq" FOREIGN KEY (ent_seq) REFERENCES "Entries" (ent_seq) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE TABLE "Senses" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        ent_seq text NOT NULL,
        stagk text[] NOT NULL,
        stagr text[] NOT NULL,
        pos text[] NOT NULL,
        xref text[] NOT NULL,
        ant text[] NOT NULL,
        field text[] NOT NULL,
        misc text[] NOT NULL,
        s_inf text[] NOT NULL,
        dial text[] NOT NULL,
        gloss text[] NOT NULL,
        CONSTRAINT "PK_Senses" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_Senses_Entries_ent_seq" FOREIGN KEY (ent_seq) REFERENCES "Entries" (ent_seq) ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE TABLE "StudySets" (
        "Id" uuid NOT NULL,
        "UserId" uuid NOT NULL,
        "LastStartDate" timestamp with time zone,
        "NewEntryGoal" integer NOT NULL,
        "NewEntryCount" integer NOT NULL,
        "NewQueue" text[] NOT NULL,
        "LearningQueue" text[] NOT NULL,
        "BaseQueue" text[] NOT NULL,
        CONSTRAINT "PK_StudySets" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_StudySets_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE TABLE "Tags" (
        "Id" uuid NOT NULL,
        "UserId" uuid NOT NULL,
        "Name" text NOT NULL,
        "Created" timestamp NOT NULL DEFAULT (NOW()),
        "TotalEntries" integer NOT NULL DEFAULT 0,
        CONSTRAINT "PK_Tags" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_Tags_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE TABLE "TrackedEntries" (
        ent_seq text NOT NULL,
        "UserId" uuid NOT NULL,
        "LevelStateType" text NOT NULL,
        "OldLevelStateType" text,
        "SpecialCategory" text,
        "Score" integer NOT NULL DEFAULT 0,
        "LastReviewDate" timestamp,
        "NextReviewDays" integer,
        "NextReviewMinutes" integer,
        CONSTRAINT "PK_TrackedEntries" PRIMARY KEY (ent_seq, "UserId"),
        CONSTRAINT "FK_TrackedEntries_Entries_ent_seq" FOREIGN KEY (ent_seq) REFERENCES "Entries" (ent_seq) ON DELETE CASCADE,
        CONSTRAINT "FK_TrackedEntries_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE TABLE "Cards" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        ent_seq text NOT NULL,
        "UserId" uuid,
        "KanjiId" integer,
        "ReadingId" integer NOT NULL,
        CONSTRAINT "PK_Cards" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_Cards_KanjiElements_KanjiId" FOREIGN KEY ("KanjiId") REFERENCES "KanjiElements" ("Id") ON DELETE RESTRICT,
        CONSTRAINT "FK_Cards_ReadingElements_ReadingId" FOREIGN KEY ("ReadingId") REFERENCES "ReadingElements" ("Id") ON DELETE RESTRICT
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE TABLE "LSource" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "SenseId" integer NOT NULL,
        "LangValue" text NOT NULL,
        lang text,
        ls_part boolean NOT NULL,
        ls_wasei boolean NOT NULL,
        CONSTRAINT "PK_LSource" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_LSource_Senses_SenseId" FOREIGN KEY ("SenseId") REFERENCES "Senses" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE TABLE "TagInStudySets" (
        "TagId" uuid NOT NULL,
        "StudySetId" uuid NOT NULL,
        "Order" integer NOT NULL,
        CONSTRAINT "PK_TagInStudySets" PRIMARY KEY ("TagId", "StudySetId"),
        CONSTRAINT "FK_TagInStudySets_StudySets_StudySetId" FOREIGN KEY ("StudySetId") REFERENCES "StudySets" ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_TagInStudySets_Tags_TagId" FOREIGN KEY ("TagId") REFERENCES "Tags" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE TABLE "EntryEvents" (
        ent_seq text NOT NULL,
        "UserId" uuid NOT NULL,
        "Serial" integer GENERATED BY DEFAULT AS IDENTITY,
        "Created" timestamp NOT NULL DEFAULT (NOW()),
        "EventType" integer NOT NULL,
        "ReviewValue" text,
        "ChangeValue" text,
        CONSTRAINT "PK_EntryEvents" PRIMARY KEY (ent_seq, "UserId", "Serial"),
        CONSTRAINT "FK_EntryEvents_TrackedEntries_ent_seq_UserId" FOREIGN KEY (ent_seq, "UserId") REFERENCES "TrackedEntries" (ent_seq, "UserId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE TABLE "EntryIsTagged" (
        ent_seq text NOT NULL,
        "UserId" uuid NOT NULL,
        "TagId" uuid NOT NULL,
        "AddedToTagDate" timestamp NOT NULL DEFAULT (NOW()),
        "UserOrder" integer NOT NULL,
        CONSTRAINT "PK_EntryIsTagged" PRIMARY KEY (ent_seq, "UserId", "TagId"),
        CONSTRAINT "FK_EntryIsTagged_Tags_TagId" FOREIGN KEY ("TagId") REFERENCES "Tags" ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_EntryIsTagged_TrackedEntries_ent_seq_UserId" FOREIGN KEY (ent_seq, "UserId") REFERENCES "TrackedEntries" (ent_seq, "UserId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE TABLE "CardSenses" (
        "CardId" integer NOT NULL,
        "SenseId" integer NOT NULL,
        CONSTRAINT "PK_CardSenses" PRIMARY KEY ("CardId", "SenseId"),
        CONSTRAINT "FK_CardSenses_Cards_CardId" FOREIGN KEY ("CardId") REFERENCES "Cards" ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_CardSenses_Senses_SenseId" FOREIGN KEY ("SenseId") REFERENCES "Senses" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE INDEX "IX_Cards_KanjiId" ON "Cards" ("KanjiId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE INDEX "IX_Cards_ReadingId" ON "Cards" ("ReadingId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE INDEX "IX_CardSenses_SenseId" ON "CardSenses" ("SenseId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE INDEX "IX_EntryIsTagged_TagId" ON "EntryIsTagged" ("TagId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE INDEX "IX_KanjiElements_ent_seq" ON "KanjiElements" (ent_seq);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE INDEX "IX_LSource_SenseId" ON "LSource" ("SenseId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE INDEX "IX_ReadingElements_ent_seq" ON "ReadingElements" (ent_seq);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE INDEX "IX_Senses_ent_seq" ON "Senses" (ent_seq);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE INDEX "IX_StudySets_UserId" ON "StudySets" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE INDEX "IX_TagInStudySets_StudySetId" ON "TagInStudySets" ("StudySetId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE INDEX "IX_Tags_UserId" ON "Tags" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE INDEX "IX_TrackedEntries_UserId" ON "TrackedEntries" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    CREATE UNIQUE INDEX "IX_Users_Username" ON "Users" ("Username");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227111613_InitialCreate') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250227111613_InitialCreate', '8.0.13');
    END IF;
END $EF$;
COMMIT;

START TRANSACTION;


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227124455_GlossIndex') THEN
    CREATE INDEX "IX_Sense_Gloss" ON "Senses" (gloss);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250227124455_GlossIndex') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250227124455_GlossIndex', '8.0.13');
    END IF;
END $EF$;
COMMIT;

